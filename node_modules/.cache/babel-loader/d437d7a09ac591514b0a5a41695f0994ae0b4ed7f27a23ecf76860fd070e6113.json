{"ast":null,"code":"// src/redux/data/dataReducer.js\n\nconst initialState = {\n  nfts: [],\n  // Array to store NFT data\n  loading: false,\n  error: false,\n  errorMsg: \"\"\n};\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NFTS\":\n      return {\n        ...state,\n        nfts: action.payload,\n        // Update the nfts array with fetched data\n        loading: false,\n        error: false,\n        errorMsg: \"\"\n      };\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\"\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errorMsg: \"\"\n        // You can remove lootBoxTokenIds and lootBoxTokenURIs if no longer needed\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errorMsg: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default dataReducer;","map":{"version":3,"names":["initialState","nfts","loading","error","errorMsg","dataReducer","state","action","type","payload"],"sources":["C:/Users/deanw/OneDrive/Desktop/GitHub/MikulPacks/src/redux/data/dataReducer.js"],"sourcesContent":["// src/redux/data/dataReducer.js\n\nconst initialState = {\n  nfts: [],       // Array to store NFT data\n  loading: false,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NFTS\":\n      return {\n        ...state,\n        nfts: action.payload, // Update the nfts array with fetched data\n        loading: false,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errorMsg: \"\",\n        // You can remove lootBoxTokenIds and lootBoxTokenURIs if no longer needed\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EAAQ;EAChBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGF,KAAK;QACRL,IAAI,EAAEM,MAAM,CAACE,OAAO;QAAE;QACtBP,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE;MACZ,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGE,KAAK;QACRJ,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE;MACZ,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGE,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE;QACV;MACF,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGE,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAEG,MAAM,CAACE;MACnB,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}